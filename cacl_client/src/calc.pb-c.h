/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: calc.proto */

#ifndef PROTOBUF_C_calc_2eproto__INCLUDED
#define PROTOBUF_C_calc_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Calculation Calculation;


/* --- enums --- */


/* --- messages --- */

struct  _Calculation
{
  ProtobufCMessage base;
  protobuf_c_boolean has_l_op;
  double l_op;
  protobuf_c_boolean has_r_op;
  double r_op;
  char *oper;
  char *log;
  protobuf_c_boolean has_answer;
  double answer;
  protobuf_c_boolean has_pr_id;
  int32_t pr_id;
  char *dq_cl_name;
  protobuf_c_boolean has_connected;
  int32_t connected;
  protobuf_c_boolean has_disconnected;
  int32_t disconnected;
  char *other_message;
  protobuf_c_boolean has_monitor;
  protobuf_c_boolean monitor;
  char *sem_name;
};
#define CALCULATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&calculation__descriptor) \
    , 0,0, 0,0, NULL, NULL, 0,0, 0,0, NULL, 0,0, 0,0, NULL, 0,0, NULL }


/* Calculation methods */
void   calculation__init
                     (Calculation         *message);
size_t calculation__get_packed_size
                     (const Calculation   *message);
size_t calculation__pack
                     (const Calculation   *message,
                      uint8_t             *out);
size_t calculation__pack_to_buffer
                     (const Calculation   *message,
                      ProtobufCBuffer     *buffer);
Calculation *
       calculation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   calculation__free_unpacked
                     (Calculation *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Calculation_Closure)
                 (const Calculation *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor calculation__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_calc_2eproto__INCLUDED */
